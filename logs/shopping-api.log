2025-07-07 09:50:52 [main] INFO  o.u.s.ShoppingApiApplication - Starting ShoppingApiApplication using Java 17.0.15 with PID 14580 (C:\Users\kurgu\Desktop\ShoppingAPI\target\classes started by kurgu in C:\Users\kurgu\Desktop\ShoppingAPI)
2025-07-07 09:50:52 [main] INFO  o.u.s.ShoppingApiApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-07 09:50:52 [main] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\Users\kurgu\Desktop\ShoppingAPI\compose.yaml'
2025-07-07 09:50:53 [main] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - There are already Docker Compose services running, skipping startup
2025-07-07 09:50:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 09:50:54 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53 ms. Found 5 JPA repository interfaces.
2025-07-07 09:50:55 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-07 09:50:55 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-07 09:50:55 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.31]
2025-07-07 09:50:55 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-07 09:50:55 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1730 ms
2025-07-07 09:50:55 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 09:50:55 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 09:50:56 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 09:50:56 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 09:50:56 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 09:50:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 09:50:56 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5cfe28e1
2025-07-07 09:50:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 09:50:56 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 09:50:57 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 09:50:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       alter column description set data type TEXT
2025-07-07 09:50:58 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 09:50:58 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 09:50:59 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 09:50:59 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 35 mappings in 'requestMappingHandlerMapping'
2025-07-07 09:50:59 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 09:50:59 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 09:50:59 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 09:51:00 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 09:51:00 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-07 09:51:00 [main] INFO  o.u.s.ShoppingApiApplication - Started ShoppingApiApplication in 7.958 seconds (process running for 8.71)
2025-07-07 09:51:00 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-07 09:51:00 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-07 09:51:00 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-07 09:51:00 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-07 09:51:00 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-07 09:51:00 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@450555ac
2025-07-07 09:51:00 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@b96101b
2025-07-07 09:51:00 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-07 09:51:00 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-07 09:51:00 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.html", parameters={}
2025-07-07 09:51:00 [http-nio-8080-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 09:51:00 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 09:51:00 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.css", parameters={}
2025-07-07 09:51:00 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-ui.css", parameters={}
2025-07-07 09:51:00 [http-nio-8080-exec-8] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 09:51:00 [http-nio-8080-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 09:51:00 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-ui-bundle.js", parameters={}
2025-07-07 09:51:00 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-ui-standalone-preset.js", parameters={}
2025-07-07 09:51:00 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-initializer.js", parameters={}
2025-07-07 09:51:00 [http-nio-8080-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 09:51:00 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 09:51:00 [http-nio-8080-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 09:51:00 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-07-07 09:51:00 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-07-07 09:51:00 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-07-07 09:51:00 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-07-07 09:51:00 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 09:51:00 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/v3/api-docs/swagger-config", parameters={}
2025-07-07 09:51:00 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
2025-07-07 09:51:00 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json]
2025-07-07 09:51:00 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{configUrl=/v3/api-docs/swagger-config, displayRequestDuration=true, filter=true, oauth2RedirectUrl= (truncated)...]
2025-07-07 09:51:00 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 09:51:00 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/v3/api-docs", parameters={}
2025-07-07 09:51:00 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-07-07 09:51:01 [http-nio-8080-exec-3] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 470 ms
2025-07-07 09:51:01 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, */*] and supported [application/json]
2025-07-07 09:51:01 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-07-07 09:51:01 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/users", parameters={}
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.UserController#getAllUsers(Pageable)
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.session_id,
        c1_0.updated_at,
        c1_0.user_id 
    from
        carts c1_0 
    where
        c1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.session_id,
        c1_0.updated_at,
        c1_0.user_id 
    from
        carts c1_0 
    where
        c1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.session_id,
        c1_0.updated_at,
        c1_0.user_id 
    from
        carts c1_0 
    where
        c1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.session_id,
        c1_0.updated_at,
        c1_0.user_id 
    from
        carts c1_0 
    where
        c1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.session_id,
        c1_0.updated_at,
        c1_0.user_id 
    from
        carts c1_0 
    where
        c1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.session_id,
        c1_0.updated_at,
        c1_0.user_id 
    from
        carts c1_0 
    where
        c1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.session_id,
        c1_0.updated_at,
        c1_0.user_id 
    from
        carts c1_0 
    where
        c1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.session_id,
        c1_0.updated_at,
        c1_0.user_id 
    from
        carts c1_0 
    where
        c1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.session_id,
        c1_0.updated_at,
        c1_0.user_id 
    from
        carts c1_0 
    where
        c1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.session_id,
        c1_0.updated_at,
        c1_0.user_id 
    from
        carts c1_0 
    where
        c1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.session_id,
        c1_0.updated_at,
        c1_0.user_id 
    from
        carts c1_0 
    where
        c1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.session_id,
        c1_0.updated_at,
        c1_0.user_id 
    from
        carts c1_0 
    where
        c1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_0.role 
    from
        user_roles r1_0 
    where
        r1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_0.role 
    from
        user_roles r1_0 
    where
        r1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_0.role 
    from
        user_roles r1_0 
    where
        r1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_0.role 
    from
        user_roles r1_0 
    where
        r1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_0.role 
    from
        user_roles r1_0 
    where
        r1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_0.role 
    from
        user_roles r1_0 
    where
        r1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_0.role 
    from
        user_roles r1_0 
    where
        r1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_0.role 
    from
        user_roles r1_0 
    where
        r1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_0.role 
    from
        user_roles r1_0 
    where
        r1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_0.role 
    from
        user_roles r1_0 
    where
        r1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_0.role 
    from
        user_roles r1_0 
    where
        r1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_0.role 
    from
        user_roles r1_0 
    where
        r1_0.user_id=?
2025-07-07 09:51:06 [http-nio-8080-exec-9] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 1 containing org.utku.shoppingapi.dto.UserDto instances]
2025-07-07 09:51:06 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 09:51:17 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/cart", parameters={}
2025-07-07 09:51:17 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.CartController#getAllCarts()
2025-07-07 09:51:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.session_id,
        c1_0.updated_at,
        c1_0.user_id 
    from
        carts c1_0
2025-07-07 09:51:17 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 09:51:17 [http-nio-8080-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[]]
2025-07-07 09:51:17 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 09:51:46 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 09:51:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 09:51:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 11:05:05 [main] INFO  o.u.s.ShoppingApiApplication - Starting ShoppingApiApplication using Java 17.0.15 with PID 7824 (C:\Users\kurgu\Desktop\ShoppingAPI\target\classes started by kurgu in C:\Users\kurgu\Desktop\ShoppingAPI)
2025-07-07 11:05:05 [main] INFO  o.u.s.ShoppingApiApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-07 11:05:05 [main] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\Users\kurgu\Desktop\ShoppingAPI\compose.yaml'
2025-07-07 11:05:06 [main] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - There are already Docker Compose services running, skipping startup
2025-07-07 11:05:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 11:05:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 45 ms. Found 5 JPA repository interfaces.
2025-07-07 11:05:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-07 11:05:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-07 11:05:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.31]
2025-07-07 11:05:08 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-07 11:05:08 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1268 ms
2025-07-07 11:05:08 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 11:05:08 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 11:05:08 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 11:05:08 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 11:05:08 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 11:05:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 11:05:08 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7455204c
2025-07-07 11:05:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 11:05:08 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 11:05:09 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 11:05:09 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       alter column description set data type TEXT
2025-07-07 11:05:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 11:05:09 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 11:05:10 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 11:05:10 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 35 mappings in 'requestMappingHandlerMapping'
2025-07-07 11:05:10 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 11:05:10 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 11:05:10 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 11:05:11 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 11:05:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-07 11:05:11 [main] INFO  o.u.s.ShoppingApiApplication - Started ShoppingApiApplication in 5.848 seconds (process running for 6.4)
2025-07-07 11:05:11 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-07 11:05:11 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-07 11:05:11 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-07 11:05:11 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-07 11:05:11 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-07 11:05:11 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3f4b52fa
2025-07-07 11:05:11 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@7d8fcde8
2025-07-07 11:05:11 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-07 11:05:11 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-07-07 11:05:11 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.html", parameters={}
2025-07-07 11:05:11 [http-nio-8080-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 11:05:11 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-07-07 11:05:11 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-initializer.js", parameters={}
2025-07-07 11:05:11 [http-nio-8080-exec-5] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 11:05:11 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 11:05:11 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/v3/api-docs/swagger-config", parameters={}
2025-07-07 11:05:11 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/favicon-32x32.png", parameters={}
2025-07-07 11:05:11 [http-nio-8080-exec-4] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 11:05:11 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-07-07 11:05:11 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
2025-07-07 11:05:11 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json]
2025-07-07 11:05:11 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{configUrl=/v3/api-docs/swagger-config, displayRequestDuration=true, filter=true, oauth2RedirectUrl= (truncated)...]
2025-07-07 11:05:11 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 11:05:11 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/v3/api-docs", parameters={}
2025-07-07 11:05:11 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-07-07 11:05:12 [http-nio-8080-exec-2] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 370 ms
2025-07-07 11:05:12 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, */*] and supported [application/json]
2025-07-07 11:05:12 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-07-07 11:05:12 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 11:10:51 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 11:10:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 11:10:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 08:16:36 [main] INFO  o.u.s.i.ProductIntegrationTest - Starting ProductIntegrationTest using Java 17.0.15 with PID 3531 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:16:36 [main] INFO  o.u.s.i.ProductIntegrationTest - The following 1 profile is active: "test"
2025-07-07 08:16:36 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@27e32fe4
2025-07-07 08:16:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:16:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 78 ms. Found 5 JPA repository interfaces.
2025-07-07 08:16:38 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:16:38 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 08:16:38 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:16:38 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:16:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 08:16:38 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-07-07 08:16:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 08:16:38 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:16:39 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:16:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:16:39 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:16:39 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 08:16:40 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 08:16:40 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 35 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:16:40 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 08:16:40 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:16:40 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:16:41 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-07 08:16:41 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 08:16:41 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-07 08:16:41 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-07 08:16:41 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 08:16:41 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 23 ms
2025-07-07 08:16:41 [main] INFO  o.u.s.i.ProductIntegrationTest - Started ProductIntegrationTest in 5.242 seconds (process running for 6.159)
2025-07-07 08:16:41 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#createProduct(CreateProductRequest)
2025-07-07 08:16:41 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CreateProductRequest(name=Test Product, description=Test Description, price=99.99, stockQuantity=10, (truncated)...]
2025-07-07 08:16:42 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        products
        (active, category, created_at, description, name, price, stock_quantity, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ProductDto(id=1, name=Test Product, description=Test Description, price=99.99, stockQuantity=10, cat (truncated)...]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#createProduct(CreateProductRequest)
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CreateProductRequest(name=Test Product, description=null, price=-10.00, stockQuantity=10, category=n (truncated)...]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{price=Price must be greater than 0}]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.utku.shoppingapi.dto.ProductDto> org.utku.shoppingapi.controller.ProductController.createProduct(org.utku.shoppingapi.dto.request.CreateProductRequest): [Field error in object 'createProductRequest' on field 'price': rejected value [-10.00]; codes [DecimalMin.createProductRequest.price,DecimalMin.price,DecimalMin.java.math.BigDecimal,DecimalMin]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createProductRequest.price,price]; arguments []; default message [price],false,0.0]; default message [Price must be greater than 0]] ]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#getAllProducts(Pageable)
2025-07-07 08:16:42 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.active,
        p1_0.category,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-07 08:16:42 [main] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 0 containing UNKNOWN instances]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#createProduct(CreateProductRequest)
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CreateProductRequest(name=, description=null, price=99.99, stockQuantity=10, category=null)]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{name=Product name cannot be empty}]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.utku.shoppingapi.dto.ProductDto> org.utku.shoppingapi.controller.ProductController.createProduct(org.utku.shoppingapi.dto.request.CreateProductRequest) with 2 errors: [Field error in object 'createProductRequest' on field 'name': rejected value []; codes [Size.createProductRequest.name,Size.name,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createProductRequest.name,name]; arguments []; default message [name],255,2]; default message [Product name must be between 2 and 255 characters]] [Field error in object 'createProductRequest' on field 'name': rejected value []; codes [NotBlank.createProductRequest.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createProductRequest.name,name]; arguments []; default message [name]]; default message [Product name cannot be empty]] ]
2025-07-07 08:16:42 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [org.utku.shoppingapi.integration.UserIntegrationTest]: UserIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-07 08:16:42 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration org.utku.shoppingapi.ShoppingApiApplication for test class org.utku.shoppingapi.integration.UserIntegrationTest
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.UserController#createUser(CreateUserRequest)
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CreateUserRequest(username=testuser, email=test@example.com, password=123, firstName=null, lastName= (truncated)...]
2025-07-07 08:16:42 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{password=Password must be at least 6 characters}]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.utku.shoppingapi.dto.UserDto org.utku.shoppingapi.controller.UserController.createUser(org.utku.shoppingapi.dto.request.CreateUserRequest): [Field error in object 'createUserRequest' on field 'password': rejected value [123]; codes [Size.createUserRequest.password,Size.password,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createUserRequest.password,password]; arguments []; default message [password],2147483647,6]; default message [Password must be at least 6 characters]] ]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.UserController#createUser(CreateUserRequest)
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CreateUserRequest(username=testuser, email=test@example.com, password=password123, firstName=Test, l (truncated)...]
2025-07-07 08:16:42 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:16:42 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [UserDto(id=1, username=testuser, email=test@example.com, firstName=Test, lastName=User, phoneNumber= (truncated)...]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.UserController#getAllUsers(Pageable)
2025-07-07 08:16:42 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    order by
        u1_0.id 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 0 containing UNKNOWN instances]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.UserController#createUser(CreateUserRequest)
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CreateUserRequest(username=testuser, email=invalid-email, password=password123, firstName=null, last (truncated)...]
2025-07-07 08:16:42 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{email=Please enter a valid email address}]
2025-07-07 08:16:42 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.utku.shoppingapi.dto.UserDto org.utku.shoppingapi.controller.UserController.createUser(org.utku.shoppingapi.dto.request.CreateUserRequest): [Field error in object 'createUserRequest' on field 'email': rejected value [invalid-email]; codes [Email.createUserRequest.email,Email.email,Email.java.lang.String,Email]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createUserRequest.email,email]; arguments []; default message [email],[Ljakarta.validation.constraints.Pattern$Flag;@14796b9e,.*]; default message [Please enter a valid email address]] ]
2025-07-07 08:16:42 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [org.utku.shoppingapi.ShoppingApiApplicationTests]: ShoppingApiApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-07 08:16:42 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration org.utku.shoppingapi.ShoppingApiApplication for test class org.utku.shoppingapi.ShoppingApiApplicationTests
2025-07-07 08:16:42 [main] INFO  o.u.s.ShoppingApiApplicationTests - Starting ShoppingApiApplicationTests using Java 17.0.15 with PID 3531 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:16:42 [main] INFO  o.u.s.ShoppingApiApplicationTests - The following 1 profile is active: "test"
2025-07-07 08:16:42 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@1c9c7f1e
2025-07-07 08:16:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:16:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2025-07-07 08:16:42 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:16:42 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:16:42 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:16:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-07-07 08:16:42 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
2025-07-07 08:16:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-07-07 08:16:42 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:16:43 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:16:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:16:43 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:16:43 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 08:16:43 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 35 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:16:43 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 08:16:43 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:16:43 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:16:43 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-07 08:16:43 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 08:16:43 [main] INFO  o.u.s.ShoppingApiApplicationTests - Started ShoppingApiApplicationTests in 1.358 seconds (process running for 8.602)
2025-07-07 08:16:43 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [org.utku.shoppingapi.controller.CartControllerTest]: CartControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-07 08:16:43 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration org.utku.shoppingapi.ShoppingApiApplication for test class org.utku.shoppingapi.controller.CartControllerTest
2025-07-07 08:16:43 [main] INFO  o.u.s.controller.CartControllerTest - Starting CartControllerTest using Java 17.0.15 with PID 3531 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:16:43 [main] INFO  o.u.s.controller.CartControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-07-07 08:16:43 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@2da788b
2025-07-07 08:16:44 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 13 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:16:44 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-07 08:16:44 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:16:44 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:16:44 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-07 08:16:44 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-07 08:16:44 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-07-07 08:16:44 [main] INFO  o.u.s.controller.CartControllerTest - Started CartControllerTest in 0.721 seconds (process running for 9.36)
2025-07-07 08:16:44 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.CartController#clearCart(Long)
2025-07-07 08:16:44 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:16:44 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-07-07 08:16:44 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.CartController#getCartById(Long)
2025-07-07 08:16:44 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:16:44 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Nothing to write: null body
2025-07-07 08:16:44 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [org.utku.shoppingapi.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-07 08:16:44 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration org.utku.shoppingapi.ShoppingApiApplication for test class org.utku.shoppingapi.repository.UserRepositoryTest
2025-07-07 08:16:44 [main] INFO  o.u.s.repository.UserRepositoryTest - Starting UserRepositoryTest using Java 17.0.15 with PID 3531 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:16:44 [main] INFO  o.u.s.repository.UserRepositoryTest - The following 1 profile is active: "test"
2025-07-07 08:16:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:16:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 5 JPA repository interfaces.
2025-07-07 08:16:45 [main] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-07-07 08:16:45 [main] INFO  o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:a40df690-0fac-4a3c-bf88-1b8285c98639;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-07-07 08:16:45 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:16:45 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:16:45 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:16:45 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:16:45 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:16:45 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:16:45 [main] INFO  o.u.s.repository.UserRepositoryTest - Started UserRepositoryTest in 0.97 seconds (process running for 10.518)
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_roles
        (user_id, role) 
    values
        (?, ?)
2025-07-07 08:16:45 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:16:46 [main] INFO  o.u.s.service.OrderServiceImpl - Creating order from cart with ID: 1
2025-07-07 08:16:46 [main] INFO  o.u.s.service.OrderServiceImpl - Order created successfully with ID: null, Total: null
2025-07-07 08:16:46 [main] INFO  o.u.s.service.OrderServiceImpl - Cart cleared after order creation
2025-07-07 08:16:46 [main] INFO  o.u.s.service.OrderServiceImpl - Creating order from cart with ID: 1
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@27e32fe4, started on Mon Jul 07 08:16:36 UTC 2025
2025-07-07 08:16:46 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 08:16:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@1c9c7f1e, started on Mon Jul 07 08:16:42 UTC 2025
2025-07-07 08:16:46 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-07-07 08:16:46 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@2da788b, started on Mon Jul 07 08:16:43 UTC 2025
2025-07-07 08:16:46 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:16:46 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:31:15 [main] INFO  o.u.s.i.AuthIntegrationTest - Starting AuthIntegrationTest using Java 17.0.15 with PID 4395 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:31:15 [main] INFO  o.u.s.i.AuthIntegrationTest - The following 1 profile is active: "test"
2025-07-07 08:31:15 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@408a247c
2025-07-07 08:31:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:31:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 5 JPA repository interfaces.
2025-07-07 08:31:17 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:31:17 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 08:31:17 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:31:17 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:31:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 08:31:17 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-07-07 08:31:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 08:31:17 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:31:18 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:31:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:31:18 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:31:18 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 08:31:19 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 08:31:19 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 08:31:19 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 08:31:19 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:31:20 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 08:31:20 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 08:31:20 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:31:20 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:31:20 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-07 08:31:20 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 08:31:20 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-07 08:31:20 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-07 08:31:20 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-07-07 08:31:20 [main] INFO  o.u.s.i.AuthIntegrationTest - Started AuthIntegrationTest in 5.932 seconds (process running for 6.781)
2025-07-07 08:31:21 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:31:21 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=null, las (truncated)...]
2025-07-07 08:31:21 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:31:21 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:31:21 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:31:21 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:31:21 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:31:21 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=1, role=USER)]
2025-07-07 08:31:21 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:31:21 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=testuser, password=password123)]
2025-07-07 08:31:21 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#getAllProducts(Pageable)
2025-07-07 08:31:22 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.active,
        p1_0.category,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-07 08:31:22 [main] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 0 containing UNKNOWN instances]
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=Test, las (truncated)...]
2025-07-07 08:31:22 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:31:22 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:31:22 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:31:22 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=2, role=USER)]
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=nonexistent, password=wrongpassword)]
2025-07-07 08:31:22 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test1@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:31:22 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:31:22 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:31:22 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:31:22 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=3, role=USER)]
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test2@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:31:22 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{username=This username is already taken}]
2025-07-07 08:31:22 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.utku.shoppingapi.dto.auth.MessageResponse> org.utku.shoppingapi.controller.AuthController.registerUser(org.utku.shoppingapi.dto.auth.RegisterRequest): [Field error in object 'registerRequest' on field 'username': rejected value [testuser]; codes [UniqueUsername.registerRequest.username,UniqueUsername.username,UniqueUsername.java.lang.String,UniqueUsername]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerRequest.username,username]; arguments []; default message [username]]; default message [This username is already taken]] ]
2025-07-07 08:31:22 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@408a247c, started on Mon Jul 07 08:31:15 UTC 2025
2025-07-07 08:31:22 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:31:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:31:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:31:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:31:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:31:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:31:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:31:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:31:22 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:31:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 08:31:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 08:31:48 [main] INFO  o.u.s.i.AuthIntegrationTest - Starting AuthIntegrationTest using Java 17.0.15 with PID 4537 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:31:48 [main] INFO  o.u.s.i.AuthIntegrationTest - The following 1 profile is active: "test"
2025-07-07 08:31:48 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@408a247c
2025-07-07 08:31:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:31:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62 ms. Found 5 JPA repository interfaces.
2025-07-07 08:31:50 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:31:50 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 08:31:50 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:31:50 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:31:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 08:31:50 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-07-07 08:31:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 08:31:50 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:31:51 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:31:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:31:51 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:31:52 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 08:31:52 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 08:31:52 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 08:31:53 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 08:31:53 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:31:53 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 08:31:53 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 08:31:54 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:31:54 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:31:54 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-07 08:31:54 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 08:31:54 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-07 08:31:54 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-07 08:31:54 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-07-07 08:31:54 [main] INFO  o.u.s.i.AuthIntegrationTest - Started AuthIntegrationTest in 6.326 seconds (process running for 7.185)
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=null, las (truncated)...]
2025-07-07 08:31:55 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:31:55 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:31:55 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:31:55 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=1, role=USER)]
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=testuser, password=password123)]
2025-07-07 08:31:55 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImlkIjoxLCJyb2xlcyI6WyJST0xFX1VTRVIiX (truncated)...]
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#getAllProducts(Pageable)
2025-07-07 08:31:55 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.active,
        p1_0.category,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-07 08:31:55 [main] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 0 containing UNKNOWN instances]
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=Test, las (truncated)...]
2025-07-07 08:31:55 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:31:55 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:31:55 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:31:55 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=2, role=USER)]
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=nonexistent, password=wrongpassword)]
2025-07-07 08:31:55 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test1@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:31:55 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:31:55 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:31:55 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:31:55 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=3, role=USER)]
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test2@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:31:55 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{username=This username is already taken}]
2025-07-07 08:31:55 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.utku.shoppingapi.dto.auth.MessageResponse> org.utku.shoppingapi.controller.AuthController.registerUser(org.utku.shoppingapi.dto.auth.RegisterRequest): [Field error in object 'registerRequest' on field 'username': rejected value [testuser]; codes [UniqueUsername.registerRequest.username,UniqueUsername.username,UniqueUsername.java.lang.String,UniqueUsername]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerRequest.username,username]; arguments []; default message [username]]; default message [This username is already taken]] ]
2025-07-07 08:31:56 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@408a247c, started on Mon Jul 07 08:31:48 UTC 2025
2025-07-07 08:31:56 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:31:56 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:31:56 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:31:56 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:31:56 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:31:56 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:31:56 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:31:56 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:31:56 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:31:56 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 08:31:56 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 08:33:22 [main] INFO  o.u.s.i.AuthIntegrationTest - Starting AuthIntegrationTest using Java 17.0.15 with PID 4725 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:33:22 [main] INFO  o.u.s.i.AuthIntegrationTest - The following 1 profile is active: "test"
2025-07-07 08:33:22 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@408a247c
2025-07-07 08:33:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:33:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53 ms. Found 5 JPA repository interfaces.
2025-07-07 08:33:23 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:33:24 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 08:33:24 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:33:24 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:33:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 08:33:24 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-07-07 08:33:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 08:33:24 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:33:25 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:33:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:33:25 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:33:25 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 08:33:26 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 08:33:26 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 08:33:26 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 08:33:26 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:33:26 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 08:33:27 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 08:33:27 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:33:27 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:33:27 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-07 08:33:27 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 08:33:27 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-07 08:33:27 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-07 08:33:27 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-07-07 08:33:27 [main] INFO  o.u.s.i.AuthIntegrationTest - Started AuthIntegrationTest in 5.855 seconds (process running for 6.913)
2025-07-07 08:33:28 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:33:28 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=null, las (truncated)...]
2025-07-07 08:33:28 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:33:28 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:33:28 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:33:28 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:33:28 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:33:28 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=1, role=USER)]
2025-07-07 08:33:28 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:33:28 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=testuser, password=password123)]
2025-07-07 08:33:28 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:33:28 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:33:28 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImlkIjoxLCJyb2xlcyI6WyJST0xFX1VTRVIiX (truncated)...]
2025-07-07 08:33:28 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#getAllProducts(Pageable)
2025-07-07 08:33:28 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.active,
        p1_0.category,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-07 08:33:28 [main] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-07 08:33:28 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:33:28 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 0 containing UNKNOWN instances]
2025-07-07 08:33:28 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:33:28 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=Test, las (truncated)...]
2025-07-07 08:33:28 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:33:28 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:33:28 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:33:29 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=2, role=USER)]
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=nonexistent, password=wrongpassword)]
2025-07-07 08:33:29 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException)
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Invalid username or password"]
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Bad credentials]
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test1@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:33:29 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:33:29 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:33:29 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:33:29 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=3, role=USER)]
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test2@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:33:29 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{username=This username is already taken}]
2025-07-07 08:33:29 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.utku.shoppingapi.dto.auth.MessageResponse> org.utku.shoppingapi.controller.AuthController.registerUser(org.utku.shoppingapi.dto.auth.RegisterRequest): [Field error in object 'registerRequest' on field 'username': rejected value [testuser]; codes [UniqueUsername.registerRequest.username,UniqueUsername.username,UniqueUsername.java.lang.String,UniqueUsername]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerRequest.username,username]; arguments []; default message [username]]; default message [This username is already taken]] ]
2025-07-07 08:33:29 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@408a247c, started on Mon Jul 07 08:33:22 UTC 2025
2025-07-07 08:33:29 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:33:29 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:33:29 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:33:29 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:33:29 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:33:29 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:33:29 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:33:29 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:33:29 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:33:29 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 08:33:29 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 08:33:43 [main] INFO  o.u.s.i.ProductIntegrationTest - Starting ProductIntegrationTest using Java 17.0.15 with PID 4863 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:33:43 [main] INFO  o.u.s.i.ProductIntegrationTest - The following 1 profile is active: "test"
2025-07-07 08:33:43 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@13e698c7
2025-07-07 08:33:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:33:44 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 5 JPA repository interfaces.
2025-07-07 08:33:45 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:33:45 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 08:33:45 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:33:45 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:33:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 08:33:45 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-07-07 08:33:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 08:33:45 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:33:46 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:33:46 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:33:46 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:33:47 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 08:33:47 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 08:33:47 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 08:33:47 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 08:33:47 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:33:48 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 08:33:48 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 08:33:48 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:33:48 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:33:48 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-07 08:33:48 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 08:33:48 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-07 08:33:48 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-07 08:33:48 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-07-07 08:33:49 [main] INFO  o.u.s.i.ProductIntegrationTest - Started ProductIntegrationTest in 6.031 seconds (process running for 6.923)
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#createProduct(CreateProductRequest)
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CreateProductRequest(name=Test Product, description=Test Description, price=99.99, stockQuantity=10, (truncated)...]
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleRuntimeException(RuntimeException)
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["An unexpected error occurred"]
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authorization.AuthorizationDeniedException: Access Denied]
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#createProduct(CreateProductRequest)
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CreateProductRequest(name=Test Product, description=null, price=-10.00, stockQuantity=10, category=n (truncated)...]
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{price=Price must be greater than 0}]
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.utku.shoppingapi.dto.ProductDto> org.utku.shoppingapi.controller.ProductController.createProduct(org.utku.shoppingapi.dto.request.CreateProductRequest): [Field error in object 'createProductRequest' on field 'price': rejected value [-10.00]; codes [DecimalMin.createProductRequest.price,DecimalMin.price,DecimalMin.java.math.BigDecimal,DecimalMin]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createProductRequest.price,price]; arguments []; default message [price],false,0.0]; default message [Price must be greater than 0]] ]
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#getAllProducts(Pageable)
2025-07-07 08:33:49 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.active,
        p1_0.category,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-07 08:33:49 [main] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 0 containing UNKNOWN instances]
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#createProduct(CreateProductRequest)
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CreateProductRequest(name=, description=null, price=99.99, stockQuantity=10, category=null)]
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{name=Product name must be between 2 and 255 characters}]
2025-07-07 08:33:49 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.utku.shoppingapi.dto.ProductDto> org.utku.shoppingapi.controller.ProductController.createProduct(org.utku.shoppingapi.dto.request.CreateProductRequest) with 2 errors: [Field error in object 'createProductRequest' on field 'name': rejected value []; codes [NotBlank.createProductRequest.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createProductRequest.name,name]; arguments []; default message [name]]; default message [Product name cannot be empty]] [Field error in object 'createProductRequest' on field 'name': rejected value []; codes [Size.createProductRequest.name,Size.name,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createProductRequest.name,name]; arguments []; default message [name],255,2]; default message [Product name must be between 2 and 255 characters]] ]
2025-07-07 08:33:49 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [org.utku.shoppingapi.integration.UserIntegrationTest]: UserIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-07 08:33:49 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration org.utku.shoppingapi.ShoppingApiApplication for test class org.utku.shoppingapi.integration.UserIntegrationTest
2025-07-07 08:33:49 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [org.utku.shoppingapi.integration.AuthIntegrationTest]: AuthIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-07 08:33:49 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration org.utku.shoppingapi.ShoppingApiApplication for test class org.utku.shoppingapi.integration.AuthIntegrationTest
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=null, las (truncated)...]
2025-07-07 08:33:50 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:33:50 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:33:50 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:33:50 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=1, role=USER)]
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=testuser, password=password123)]
2025-07-07 08:33:50 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImlkIjoxLCJyb2xlcyI6WyJST0xFX1VTRVIiX (truncated)...]
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#getAllProducts(Pageable)
2025-07-07 08:33:50 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.active,
        p1_0.category,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 0 containing UNKNOWN instances]
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=Test, las (truncated)...]
2025-07-07 08:33:50 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:33:50 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:33:50 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:33:50 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=2, role=USER)]
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=nonexistent, password=wrongpassword)]
2025-07-07 08:33:50 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException)
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Invalid username or password"]
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Bad credentials]
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test1@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:33:50 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:33:50 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:33:50 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:33:50 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=3, role=USER)]
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test2@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:33:50 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{username=This username is already taken}]
2025-07-07 08:33:50 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.utku.shoppingapi.dto.auth.MessageResponse> org.utku.shoppingapi.controller.AuthController.registerUser(org.utku.shoppingapi.dto.auth.RegisterRequest): [Field error in object 'registerRequest' on field 'username': rejected value [testuser]; codes [UniqueUsername.registerRequest.username,UniqueUsername.username,UniqueUsername.java.lang.String,UniqueUsername]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerRequest.username,username]; arguments []; default message [username]]; default message [This username is already taken]] ]
2025-07-07 08:33:50 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [org.utku.shoppingapi.ShoppingApiApplicationTests]: ShoppingApiApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-07 08:33:50 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration org.utku.shoppingapi.ShoppingApiApplication for test class org.utku.shoppingapi.ShoppingApiApplicationTests
2025-07-07 08:33:50 [main] INFO  o.u.s.ShoppingApiApplicationTests - Starting ShoppingApiApplicationTests using Java 17.0.15 with PID 4863 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:33:50 [main] INFO  o.u.s.ShoppingApiApplicationTests - The following 1 profile is active: "test"
2025-07-07 08:33:50 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@e4bb03
2025-07-07 08:33:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:33:51 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2025-07-07 08:33:51 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:33:51 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:33:51 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:33:51 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-07-07 08:33:51 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
2025-07-07 08:33:51 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-07-07 08:33:51 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:33:51 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:33:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:33:51 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:33:51 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 08:33:51 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 08:33:51 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 08:33:51 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:33:51 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 08:33:51 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 08:33:52 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:33:52 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:33:52 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-07 08:33:52 [main] INFO  o.u.s.ShoppingApiApplicationTests - Started ShoppingApiApplicationTests in 1.436 seconds (process running for 10.092)
2025-07-07 08:33:52 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [org.utku.shoppingapi.controller.CartControllerTest]: CartControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-07 08:33:52 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration org.utku.shoppingapi.ShoppingApiApplication for test class org.utku.shoppingapi.controller.CartControllerTest
2025-07-07 08:33:52 [main] INFO  o.u.s.controller.CartControllerTest - Starting CartControllerTest using Java 17.0.15 with PID 4863 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:33:52 [main] INFO  o.u.s.controller.CartControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-07-07 08:33:52 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@2123bc64
2025-07-07 08:33:52 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 13 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:33:52 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-07 08:33:52 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:33:52 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:33:52 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: ab7cae6d-842b-4ac2-8a60-77bed4f861a7

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-07-07 08:33:52 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-07 08:33:53 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-07 08:33:53 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-07 08:33:53 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-07-07 08:33:53 [main] INFO  o.u.s.controller.CartControllerTest - Started CartControllerTest in 0.807 seconds (process running for 10.932)
2025-07-07 08:33:53 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [org.utku.shoppingapi.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-07 08:33:53 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration org.utku.shoppingapi.ShoppingApiApplication for test class org.utku.shoppingapi.repository.UserRepositoryTest
2025-07-07 08:33:53 [main] INFO  o.u.s.repository.UserRepositoryTest - Starting UserRepositoryTest using Java 17.0.15 with PID 4863 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:33:53 [main] INFO  o.u.s.repository.UserRepositoryTest - The following 1 profile is active: "test"
2025-07-07 08:33:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:33:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 5 JPA repository interfaces.
2025-07-07 08:33:53 [main] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-07-07 08:33:53 [main] INFO  o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:f8287b49-52f1-41c2-af58-0d562e88da69;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-07-07 08:33:53 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:33:53 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:33:53 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:33:53 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:33:53 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:33:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:33:53 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:33:54 [main] INFO  o.u.s.repository.UserRepositoryTest - Started UserRepositoryTest in 0.942 seconds (process running for 12.028)
2025-07-07 08:33:54 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:33:54 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:33:54 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:33:54 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_roles
        (user_id, role) 
    values
        (?, ?)
2025-07-07 08:33:54 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:33:54 [main] INFO  o.u.s.service.OrderServiceImpl - Creating order from cart with ID: 1
2025-07-07 08:33:54 [main] INFO  o.u.s.service.OrderServiceImpl - Order created successfully with ID: null, Total: null
2025-07-07 08:33:54 [main] INFO  o.u.s.service.OrderServiceImpl - Cart cleared after order creation
2025-07-07 08:33:54 [main] INFO  o.u.s.service.OrderServiceImpl - Creating order from cart with ID: 1
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@13e698c7, started on Mon Jul 07 08:33:43 UTC 2025
2025-07-07 08:33:54 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 08:33:54 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@e4bb03, started on Mon Jul 07 08:33:50 UTC 2025
2025-07-07 08:33:54 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-07-07 08:33:54 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@2123bc64, started on Mon Jul 07 08:33:52 UTC 2025
2025-07-07 08:33:54 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:33:54 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 11:42:01 [main] INFO  o.u.s.ShoppingApiApplication - Starting ShoppingApiApplication using Java 17.0.15 with PID 10212 (C:\Users\kurgu\Desktop\ShoppingAPI\target\classes started by kurgu in C:\Users\kurgu\Desktop\ShoppingAPI)
2025-07-07 11:42:01 [main] INFO  o.u.s.ShoppingApiApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-07 11:42:01 [main] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\Users\kurgu\Desktop\ShoppingAPI\compose.yaml'
2025-07-07 11:42:02 [main] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - There are already Docker Compose services running, skipping startup
2025-07-07 11:42:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 11:42:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 5 JPA repository interfaces.
2025-07-07 11:42:04 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-07 11:42:04 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-07 11:42:04 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.31]
2025-07-07 11:42:04 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-07 11:42:04 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1473 ms
2025-07-07 11:42:04 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 11:42:04 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 11:42:04 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 11:42:04 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 11:42:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 11:42:05 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@40b8158d
2025-07-07 11:42:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 11:42:05 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 11:42:05 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 11:42:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       alter column description set data type TEXT
2025-07-07 11:42:06 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 11:42:06 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 11:42:06 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 11:42:06 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 11:42:06 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 11:42:06 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 11:42:07 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 11:42:07 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 11:42:07 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 11:42:07 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 11:42:07 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 11:42:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-07 11:42:07 [main] INFO  o.u.s.ShoppingApiApplication - Started ShoppingApiApplication in 6.854 seconds (process running for 7.36)
2025-07-07 11:42:08 [RMI TCP Connection(1)-192.168.56.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-07 11:42:08 [RMI TCP Connection(1)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-07 11:42:08 [RMI TCP Connection(1)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-07 11:42:08 [RMI TCP Connection(1)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-07 11:42:08 [RMI TCP Connection(1)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-07 11:42:08 [RMI TCP Connection(1)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@75931d62
2025-07-07 11:42:08 [RMI TCP Connection(1)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2ca3ce56
2025-07-07 11:42:08 [RMI TCP Connection(1)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-07 11:42:08 [RMI TCP Connection(1)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-07 11:42:26 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.html", parameters={}
2025-07-07 11:42:26 [http-nio-8080-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 11:42:26 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-07-07 11:42:26 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-initializer.js", parameters={}
2025-07-07 11:42:26 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 11:42:26 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 11:42:27 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/v3/api-docs/swagger-config", parameters={}
2025-07-07 11:42:27 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
2025-07-07 11:42:27 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json]
2025-07-07 11:42:27 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{configUrl=/v3/api-docs/swagger-config, displayRequestDuration=true, filter=true, oauth2RedirectUrl= (truncated)...]
2025-07-07 11:42:27 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 11:42:27 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - GET "/v3/api-docs", parameters={}
2025-07-07 11:42:27 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-07-07 11:42:27 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 286 ms
2025-07-07 11:42:27 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, */*] and supported [application/json]
2025-07-07 11:42:27 [http-nio-8080-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-07-07 11:42:27 [http-nio-8080-exec-4] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 11:43:13 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 11:43:13 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 11:43:13 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 11:45:01 [main] INFO  o.u.s.ShoppingApiApplication - Starting ShoppingApiApplication using Java 17.0.15 with PID 22020 (C:\Users\kurgu\Desktop\ShoppingAPI\target\classes started by kurgu in C:\Users\kurgu\Desktop\ShoppingAPI)
2025-07-07 11:45:01 [main] INFO  o.u.s.ShoppingApiApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-07 11:45:01 [main] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\Users\kurgu\Desktop\ShoppingAPI\compose.yaml'
2025-07-07 11:45:02 [main] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - There are already Docker Compose services running, skipping startup
2025-07-07 11:45:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 11:45:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 5 JPA repository interfaces.
2025-07-07 11:45:03 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-07 11:45:03 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-07 11:45:03 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.31]
2025-07-07 11:45:03 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-07 11:45:03 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1331 ms
2025-07-07 11:45:03 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 11:45:04 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 11:45:04 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 11:45:04 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 11:45:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 11:45:04 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5df54296
2025-07-07 11:45:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 11:45:04 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 11:45:05 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        id bigint generated by default as identity,
        created_at timestamp(6),
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        updated_at timestamp(6),
        cart_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        id bigint generated by default as identity,
        created_at timestamp(6),
        session_id varchar(100),
        updated_at timestamp(6),
        user_id bigint,
        primary key (id)
    )
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        id bigint generated by default as identity,
        created_at timestamp(6),
        product_id bigint not null,
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        id bigint generated by default as identity,
        quantity integer not null,
        unit_price numeric(10,2) not null,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        total_amount numeric(10,2) not null,
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    create table products (
        id bigint generated by default as identity,
        active boolean not null,
        category varchar(100),
        created_at timestamp(6),
        description TEXT,
        name varchar(255) not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        updated_at timestamp(6),
        primary key (id)
    )
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role varchar(255) check (role in ('USER','ADMIN'))
    )
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    create table users (
        id bigint generated by default as identity,
        created_at timestamp(6),
        email varchar(100) not null,
        enabled boolean not null,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        phone_number varchar(15),
        updated_at timestamp(6),
        username varchar(50) not null,
        primary key (id)
    )
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       drop constraint if exists UK6oue0maw421roerltnxn16a38
2025-07-07 11:45:05 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-07-07 11:45:05 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - constraint "uk6oue0maw421roerltnxn16a38" of relation "cart_items" does not exist, skipping
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint UK6oue0maw421roerltnxn16a38 unique (cart_id, product_id)
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       drop constraint if exists UK64t7ox312pqal3p7fg9o503c2
2025-07-07 11:45:05 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-07-07 11:45:05 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - constraint "uk64t7ox312pqal3p7fg9o503c2" of relation "carts" does not exist, skipping
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint UK64t7ox312pqal3p7fg9o503c2 unique (user_id)
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       drop constraint if exists UKgh1s14hhb9qb8p2do933hscsf
2025-07-07 11:45:05 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-07-07 11:45:05 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - constraint "ukgh1s14hhb9qb8p2do933hscsf" of relation "favorites" does not exist, skipping
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint UKgh1s14hhb9qb8p2do933hscsf unique (user_id, product_id)
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UKr43af9ap4edm43mmtq01oddj6
2025-07-07 11:45:05 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-07-07 11:45:05 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - constraint "ukr43af9ap4edm43mmtq01oddj6" of relation "users" does not exist, skipping
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UKr43af9ap4edm43mmtq01oddj6 unique (username)
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
2025-07-07 11:45:05 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-07-07 11:45:05 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - constraint "uk6dotkott2kjsp8vw4d0m25fb7" of relation "users" does not exist, skipping
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists users 
       add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 11:45:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 11:45:05 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 11:45:05 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 11:45:05 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 11:45:05 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 11:45:05 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 11:45:06 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 11:45:06 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 11:45:06 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 11:45:06 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 11:45:06 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 11:45:06 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 11:45:06 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-07 11:45:06 [main] INFO  o.u.s.ShoppingApiApplication - Started ShoppingApiApplication in 6.03 seconds (process running for 6.55)
2025-07-07 11:45:07 [RMI TCP Connection(1)-192.168.56.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-07 11:45:07 [RMI TCP Connection(1)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-07 11:45:07 [RMI TCP Connection(1)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-07 11:45:07 [RMI TCP Connection(1)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-07 11:45:07 [RMI TCP Connection(1)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-07 11:45:07 [RMI TCP Connection(1)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5e5e680b
2025-07-07 11:45:07 [RMI TCP Connection(1)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@9478683
2025-07-07 11:45:07 [RMI TCP Connection(1)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-07 11:45:07 [RMI TCP Connection(1)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-07-07 11:46:17 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.html", parameters={}
2025-07-07 11:46:17 [http-nio-8080-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 11:46:17 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-07-07 11:46:17 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-initializer.js", parameters={}
2025-07-07 11:46:17 [http-nio-8080-exec-2] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 11:46:17 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 11:46:18 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/v3/api-docs/swagger-config", parameters={}
2025-07-07 11:46:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
2025-07-07 11:46:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json]
2025-07-07 11:46:18 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{configUrl=/v3/api-docs/swagger-config, displayRequestDuration=true, filter=true, oauth2RedirectUrl= (truncated)...]
2025-07-07 11:46:18 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 11:46:18 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/v3/api-docs", parameters={}
2025-07-07 11:46:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-07-07 11:46:18 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 363 ms
2025-07-07 11:46:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, */*] and supported [application/json]
2025-07-07 11:46:18 [http-nio-8080-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-07-07 11:46:18 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 11:50:06 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 11:50:06 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 11:50:06 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 08:52:58 [main] INFO  o.u.s.i.ProductIntegrationTest - Starting ProductIntegrationTest using Java 17.0.15 with PID 3547 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:52:58 [main] INFO  o.u.s.i.ProductIntegrationTest - The following 1 profile is active: "test"
2025-07-07 08:52:58 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@13e698c7
2025-07-07 08:53:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:53:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 5 JPA repository interfaces.
2025-07-07 08:53:00 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:53:00 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 08:53:00 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:53:01 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:53:01 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 08:53:01 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-07-07 08:53:01 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 08:53:01 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:53:02 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:53:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:53:02 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:53:02 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 08:53:03 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 08:53:03 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 08:53:03 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 08:53:03 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:53:03 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 08:53:04 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 08:53:04 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:53:04 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:53:04 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-07 08:53:04 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 08:53:04 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-07 08:53:04 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-07 08:53:04 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-07-07 08:53:04 [main] INFO  o.u.s.i.ProductIntegrationTest - Started ProductIntegrationTest in 6.4 seconds (process running for 7.469)
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#createProduct(CreateProductRequest)
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CreateProductRequest(name=Test Product, description=Test Description, price=99.99, stockQuantity=10, (truncated)...]
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleRuntimeException(RuntimeException)
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["An unexpected error occurred"]
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authorization.AuthorizationDeniedException: Access Denied]
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#createProduct(CreateProductRequest)
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CreateProductRequest(name=Test Product, description=null, price=-10.00, stockQuantity=10, category=n (truncated)...]
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{price=Price must be greater than 0}]
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.utku.shoppingapi.dto.ProductDto> org.utku.shoppingapi.controller.ProductController.createProduct(org.utku.shoppingapi.dto.request.CreateProductRequest): [Field error in object 'createProductRequest' on field 'price': rejected value [-10.00]; codes [DecimalMin.createProductRequest.price,DecimalMin.price,DecimalMin.java.math.BigDecimal,DecimalMin]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createProductRequest.price,price]; arguments []; default message [price],false,0.0]; default message [Price must be greater than 0]] ]
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#getAllProducts(Pageable)
2025-07-07 08:53:05 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.active,
        p1_0.category,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-07 08:53:05 [main] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 0 containing UNKNOWN instances]
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#createProduct(CreateProductRequest)
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [CreateProductRequest(name=, description=null, price=99.99, stockQuantity=10, category=null)]
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{name=Product name must be between 2 and 255 characters}]
2025-07-07 08:53:05 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.utku.shoppingapi.dto.ProductDto> org.utku.shoppingapi.controller.ProductController.createProduct(org.utku.shoppingapi.dto.request.CreateProductRequest) with 2 errors: [Field error in object 'createProductRequest' on field 'name': rejected value []; codes [NotBlank.createProductRequest.name,NotBlank.name,NotBlank.java.lang.String,NotBlank]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createProductRequest.name,name]; arguments []; default message [name]]; default message [Product name cannot be empty]] [Field error in object 'createProductRequest' on field 'name': rejected value []; codes [Size.createProductRequest.name,Size.name,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [createProductRequest.name,name]; arguments []; default message [name],255,2]; default message [Product name must be between 2 and 255 characters]] ]
2025-07-07 08:53:05 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [org.utku.shoppingapi.integration.UserIntegrationTest]: UserIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-07 08:53:05 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration org.utku.shoppingapi.ShoppingApiApplication for test class org.utku.shoppingapi.integration.UserIntegrationTest
2025-07-07 08:53:06 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [org.utku.shoppingapi.integration.AuthIntegrationTest]: AuthIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-07 08:53:06 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration org.utku.shoppingapi.ShoppingApiApplication for test class org.utku.shoppingapi.integration.AuthIntegrationTest
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=null, las (truncated)...]
2025-07-07 08:53:06 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:53:06 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:53:06 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:53:06 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=1, role=USER)]
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=testuser, password=password123)]
2025-07-07 08:53:06 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImlkIjoxLCJyb2xlcyI6WyJST0xFX1VTRVIiX (truncated)...]
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#getAllProducts(Pageable)
2025-07-07 08:53:06 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.active,
        p1_0.category,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 0 containing UNKNOWN instances]
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=Test, las (truncated)...]
2025-07-07 08:53:06 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:53:06 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:53:06 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:53:06 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=2, role=USER)]
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=nonexistent, password=wrongpassword)]
2025-07-07 08:53:06 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException)
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Invalid username or password"]
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Bad credentials]
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test1@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:53:06 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:53:06 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:53:06 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:53:06 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=3, role=USER)]
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test2@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:53:06 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{username=This username is already taken}]
2025-07-07 08:53:06 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.utku.shoppingapi.dto.auth.MessageResponse> org.utku.shoppingapi.controller.AuthController.registerUser(org.utku.shoppingapi.dto.auth.RegisterRequest): [Field error in object 'registerRequest' on field 'username': rejected value [testuser]; codes [UniqueUsername.registerRequest.username,UniqueUsername.username,UniqueUsername.java.lang.String,UniqueUsername]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerRequest.username,username]; arguments []; default message [username]]; default message [This username is already taken]] ]
2025-07-07 08:53:06 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [org.utku.shoppingapi.ShoppingApiApplicationTests]: ShoppingApiApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-07 08:53:06 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration org.utku.shoppingapi.ShoppingApiApplication for test class org.utku.shoppingapi.ShoppingApiApplicationTests
2025-07-07 08:53:06 [main] INFO  o.u.s.ShoppingApiApplicationTests - Starting ShoppingApiApplicationTests using Java 17.0.15 with PID 3547 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:53:06 [main] INFO  o.u.s.ShoppingApiApplicationTests - The following 1 profile is active: "test"
2025-07-07 08:53:06 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5b4f77e1
2025-07-07 08:53:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:53:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
2025-07-07 08:53:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:53:07 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:53:07 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:53:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-07-07 08:53:07 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:testdb user=SA
2025-07-07 08:53:07 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-07-07 08:53:07 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:53:07 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:53:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:53:07 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:53:07 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 08:53:07 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 08:53:07 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 08:53:07 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:53:07 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 08:53:07 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 08:53:08 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:53:08 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:53:08 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-07 08:53:08 [main] INFO  o.u.s.ShoppingApiApplicationTests - Started ShoppingApiApplicationTests in 1.352 seconds (process running for 10.705)
2025-07-07 08:53:08 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [org.utku.shoppingapi.controller.CartControllerTest]: CartControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-07 08:53:08 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration org.utku.shoppingapi.ShoppingApiApplication for test class org.utku.shoppingapi.controller.CartControllerTest
2025-07-07 08:53:08 [main] INFO  o.u.s.controller.CartControllerTest - Starting CartControllerTest using Java 17.0.15 with PID 3547 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:53:08 [main] INFO  o.u.s.controller.CartControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-07-07 08:53:08 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@412cd56e
2025-07-07 08:53:08 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 13 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:53:08 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-07 08:53:08 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:53:08 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:53:09 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: deb32773-8277-4da2-93ec-68baae8925dd

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-07-07 08:53:09 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-07 08:53:09 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-07 08:53:09 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-07 08:53:09 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-07-07 08:53:09 [main] INFO  o.u.s.controller.CartControllerTest - Started CartControllerTest in 0.864 seconds (process running for 11.603)
2025-07-07 08:53:09 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [org.utku.shoppingapi.repository.UserRepositoryTest]: UserRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-07 08:53:09 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration org.utku.shoppingapi.ShoppingApiApplication for test class org.utku.shoppingapi.repository.UserRepositoryTest
2025-07-07 08:53:09 [main] INFO  o.u.s.repository.UserRepositoryTest - Starting UserRepositoryTest using Java 17.0.15 with PID 3547 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:53:09 [main] INFO  o.u.s.repository.UserRepositoryTest - The following 1 profile is active: "test"
2025-07-07 08:53:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:53:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31 ms. Found 5 JPA repository interfaces.
2025-07-07 08:53:09 [main] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
2025-07-07 08:53:09 [main] INFO  o.s.j.d.e.EmbeddedDatabaseFactory - Starting embedded database: url='jdbc:h2:mem:a0bf1558-dcb3-4618-8622-e8b3f9342018;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-07-07 08:53:09 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:53:09 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:53:09 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:53:09 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:53:10 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:53:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:53:10 [main] INFO  o.u.s.repository.UserRepositoryTest - Started UserRepositoryTest in 1.031 seconds (process running for 12.797)
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_roles
        (user_id, role) 
    values
        (?, ?)
2025-07-07 08:53:10 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:53:10 [main] INFO  o.u.s.service.OrderServiceImpl - Creating order from cart with ID: 1
2025-07-07 08:53:10 [main] INFO  o.u.s.service.OrderServiceImpl - Order created successfully with ID: null, Total: null
2025-07-07 08:53:10 [main] INFO  o.u.s.service.OrderServiceImpl - Cart cleared after order creation
2025-07-07 08:53:10 [main] INFO  o.u.s.service.OrderServiceImpl - Creating order from cart with ID: 1
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@13e698c7, started on Mon Jul 07 08:52:58 UTC 2025
2025-07-07 08:53:10 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 08:53:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@5b4f77e1, started on Mon Jul 07 08:53:06 UTC 2025
2025-07-07 08:53:10 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-07-07 08:53:10 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@412cd56e, started on Mon Jul 07 08:53:08 UTC 2025
2025-07-07 08:53:10 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:53:10 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:53:23 [main] INFO  o.u.s.i.AuthIntegrationTest - Starting AuthIntegrationTest using Java 17.0.15 with PID 3800 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:53:23 [main] INFO  o.u.s.i.AuthIntegrationTest - The following 1 profile is active: "test"
2025-07-07 08:53:23 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@408a247c
2025-07-07 08:53:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:53:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 5 JPA repository interfaces.
2025-07-07 08:53:24 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:53:24 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 08:53:24 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:53:25 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:53:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 08:53:25 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-07-07 08:53:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 08:53:25 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:53:26 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:53:26 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:53:26 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:53:26 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 08:53:27 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 08:53:27 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 08:53:27 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 08:53:28 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:53:28 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 08:53:28 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 08:53:28 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:53:28 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:53:28 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-07 08:53:28 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 08:53:28 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-07 08:53:28 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-07 08:53:28 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-07-07 08:53:29 [main] INFO  o.u.s.i.AuthIntegrationTest - Started AuthIntegrationTest in 6.232 seconds (process running for 7.117)
2025-07-07 08:53:29 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:53:29 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=null, las (truncated)...]
2025-07-07 08:53:29 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:53:29 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:53:29 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:53:29 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:53:29 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:53:29 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=1, role=USER)]
2025-07-07 08:53:29 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=testuser, password=password123)]
2025-07-07 08:53:30 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImlkIjoxLCJyb2xlcyI6WyJST0xFX1VTRVIiX (truncated)...]
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#getAllProducts(Pageable)
2025-07-07 08:53:30 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.active,
        p1_0.category,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-07 08:53:30 [main] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 0 containing UNKNOWN instances]
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=Test, las (truncated)...]
2025-07-07 08:53:30 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:53:30 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:53:30 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:53:30 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=2, role=USER)]
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=nonexistent, password=wrongpassword)]
2025-07-07 08:53:30 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException)
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Invalid username or password"]
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Bad credentials]
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test1@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:53:30 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:53:30 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:53:30 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:53:30 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=3, role=USER)]
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test2@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:53:30 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{username=This username is already taken}]
2025-07-07 08:53:30 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.utku.shoppingapi.dto.auth.MessageResponse> org.utku.shoppingapi.controller.AuthController.registerUser(org.utku.shoppingapi.dto.auth.RegisterRequest): [Field error in object 'registerRequest' on field 'username': rejected value [testuser]; codes [UniqueUsername.registerRequest.username,UniqueUsername.username,UniqueUsername.java.lang.String,UniqueUsername]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerRequest.username,username]; arguments []; default message [username]]; default message [This username is already taken]] ]
2025-07-07 08:53:30 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@408a247c, started on Mon Jul 07 08:53:23 UTC 2025
2025-07-07 08:53:30 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:53:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:53:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:53:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:53:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:53:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:53:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:53:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:53:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:53:30 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 08:53:30 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 08:54:15 [main] INFO  o.u.s.controller.CartControllerTest - Starting CartControllerTest using Java 17.0.15 with PID 4062 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:54:15 [main] INFO  o.u.s.controller.CartControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-07-07 08:54:15 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@6f099cef
2025-07-07 08:54:17 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 13 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:54:17 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2025-07-07 08:54:18 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:54:18 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:54:18 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 04a13e95-fda2-475a-b430-4c205683c23c

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-07-07 08:54:18 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-07-07 08:54:18 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-07 08:54:18 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-07 08:54:18 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-07-07 08:54:18 [main] INFO  o.u.s.controller.CartControllerTest - Started CartControllerTest in 2.693 seconds (process running for 3.553)
2025-07-07 08:54:18 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@6f099cef, started on Mon Jul 07 08:54:15 UTC 2025
2025-07-07 08:55:36 [main] INFO  o.u.s.i.AuthIntegrationTest - Starting AuthIntegrationTest using Java 17.0.15 with PID 4370 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:55:36 [main] INFO  o.u.s.i.AuthIntegrationTest - The following 1 profile is active: "test"
2025-07-07 08:55:36 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@408a247c
2025-07-07 08:55:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:55:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57 ms. Found 5 JPA repository interfaces.
2025-07-07 08:55:38 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:55:38 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 08:55:38 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:55:38 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:55:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 08:55:38 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-07-07 08:55:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 08:55:38 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:55:39 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:55:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:55:39 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:55:39 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 08:55:40 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 08:55:40 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 08:55:40 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 08:55:41 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:55:41 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 08:55:41 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 08:55:41 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:55:41 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:55:42 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-07 08:55:42 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 08:55:42 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-07 08:55:42 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-07 08:55:42 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 3 ms
2025-07-07 08:55:42 [main] INFO  o.u.s.i.AuthIntegrationTest - Started AuthIntegrationTest in 6.389 seconds (process running for 7.359)
2025-07-07 08:55:42 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:55:42 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=null, las (truncated)...]
2025-07-07 08:55:42 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:55:42 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:55:42 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:55:43 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=1, role=USER)]
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=testuser, password=password123)]
2025-07-07 08:55:43 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImlkIjoxLCJyb2xlcyI6WyJST0xFX1VTRVIiX (truncated)...]
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#getAllProducts(Pageable)
2025-07-07 08:55:43 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.active,
        p1_0.category,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-07 08:55:43 [main] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 0 containing UNKNOWN instances]
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=Test, las (truncated)...]
2025-07-07 08:55:43 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:55:43 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:55:43 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:55:43 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=2, role=USER)]
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=nonexistent, password=wrongpassword)]
2025-07-07 08:55:43 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException)
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Invalid username or password"]
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Bad credentials]
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test1@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:55:43 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:55:43 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:55:43 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:55:43 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=3, role=USER)]
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test2@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:55:43 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{username=This username is already taken}]
2025-07-07 08:55:43 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.utku.shoppingapi.dto.auth.MessageResponse> org.utku.shoppingapi.controller.AuthController.registerUser(org.utku.shoppingapi.dto.auth.RegisterRequest): [Field error in object 'registerRequest' on field 'username': rejected value [testuser]; codes [UniqueUsername.registerRequest.username,UniqueUsername.username,UniqueUsername.java.lang.String,UniqueUsername]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerRequest.username,username]; arguments []; default message [username]]; default message [This username is already taken]] ]
2025-07-07 08:55:43 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@408a247c, started on Mon Jul 07 08:55:36 UTC 2025
2025-07-07 08:55:43 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:55:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:55:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:55:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:55:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:55:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:55:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:55:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:55:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:55:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 08:55:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 08:56:16 [main] INFO  o.u.s.i.SecurityPublicEndpointTest - Starting SecurityPublicEndpointTest using Java 17.0.15 with PID 4632 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:56:16 [main] INFO  o.u.s.i.SecurityPublicEndpointTest - The following 1 profile is active: "test"
2025-07-07 08:56:16 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@63998bf4
2025-07-07 08:56:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:56:18 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65 ms. Found 5 JPA repository interfaces.
2025-07-07 08:56:18 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:56:18 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 08:56:18 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:56:19 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:56:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 08:56:19 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-07-07 08:56:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 08:56:19 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:56:20 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:56:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:56:20 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:56:20 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 08:56:21 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 08:56:21 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 08:56:21 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 08:56:21 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:56:21 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 08:56:21 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 08:56:22 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:56:22 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:56:22 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-07 08:56:22 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 08:56:22 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-07 08:56:22 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-07 08:56:22 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-07-07 08:56:22 [main] INFO  o.u.s.i.SecurityPublicEndpointTest - Started SecurityPublicEndpointTest in 6.351 seconds (process running for 7.258)
2025-07-07 08:56:23 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:56:23 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=publictestuser, email=publictest@example.com, password=password123, firstNa (truncated)...]
2025-07-07 08:56:23 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:56:23 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:56:23 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:56:23 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:56:23 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:56:23 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=1, role=USER)]
2025-07-07 08:56:23 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:56:23 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=specifictestuser, email=specifictest@example.com, password=password123, fir (truncated)...]
2025-07-07 08:56:23 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:56:23 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:56:23 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:56:23 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:56:23 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:56:23 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=2, role=USER)]
2025-07-07 08:56:23 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@63998bf4, started on Mon Jul 07 08:56:16 UTC 2025
2025-07-07 08:56:23 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:56:23 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:56:23 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:56:23 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:56:23 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:56:23 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:56:23 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:56:23 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:56:23 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:56:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 08:56:23 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 08:56:35 [main] INFO  o.u.s.i.AuthIntegrationTest - Starting AuthIntegrationTest using Java 17.0.15 with PID 4874 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:56:35 [main] INFO  o.u.s.i.AuthIntegrationTest - The following 1 profile is active: "test"
2025-07-07 08:56:35 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4ee33af7
2025-07-07 08:56:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:56:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63 ms. Found 5 JPA repository interfaces.
2025-07-07 08:56:37 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:56:37 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 08:56:37 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:56:37 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:56:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 08:56:37 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-07-07 08:56:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 08:56:37 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:56:38 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:56:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:56:38 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:56:39 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 08:56:39 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 08:56:39 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 08:56:40 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 08:56:40 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:56:40 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 08:56:40 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 08:56:41 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:56:41 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:56:41 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-07 08:56:41 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 08:56:41 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-07 08:56:41 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-07 08:56:41 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-07-07 08:56:41 [main] INFO  o.u.s.i.AuthIntegrationTest - Started AuthIntegrationTest in 6.88 seconds (process running for 7.783)
2025-07-07 08:56:42 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:56:42 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=null, las (truncated)...]
2025-07-07 08:56:42 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:56:42 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:56:42 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:56:42 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:56:42 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:56:42 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=1, role=USER)]
2025-07-07 08:56:42 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:56:42 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=testuser, password=password123)]
2025-07-07 08:56:42 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:56:42 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:56:42 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImlkIjoxLCJyb2xlcyI6WyJST0xFX1VTRVIiX (truncated)...]
2025-07-07 08:56:42 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#getAllProducts(Pageable)
2025-07-07 08:56:42 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.active,
        p1_0.category,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-07 08:56:42 [main] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-07 08:56:42 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:56:42 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 0 containing UNKNOWN instances]
2025-07-07 08:56:42 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:56:42 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=Test, las (truncated)...]
2025-07-07 08:56:42 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:56:42 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:56:42 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:56:43 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=2, role=USER)]
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=nonexistent, password=wrongpassword)]
2025-07-07 08:56:43 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException)
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Invalid username or password"]
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Bad credentials]
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test1@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:56:43 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:56:43 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:56:43 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:56:43 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=3, role=USER)]
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test2@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:56:43 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{username=This username is already taken}]
2025-07-07 08:56:43 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.utku.shoppingapi.dto.auth.MessageResponse> org.utku.shoppingapi.controller.AuthController.registerUser(org.utku.shoppingapi.dto.auth.RegisterRequest): [Field error in object 'registerRequest' on field 'username': rejected value [testuser]; codes [UniqueUsername.registerRequest.username,UniqueUsername.username,UniqueUsername.java.lang.String,UniqueUsername]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerRequest.username,username]; arguments []; default message [username]]; default message [This username is already taken]] ]
2025-07-07 08:56:43 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4ee33af7, started on Mon Jul 07 08:56:35 UTC 2025
2025-07-07 08:56:43 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:56:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:56:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:56:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:56:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:56:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:56:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:56:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:56:43 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:56:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 08:56:43 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 08:56:54 [main] INFO  o.u.s.i.SecurityPublicEndpointTest - Starting SecurityPublicEndpointTest using Java 17.0.15 with PID 5117 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:56:54 [main] INFO  o.u.s.i.SecurityPublicEndpointTest - The following 1 profile is active: "test"
2025-07-07 08:56:54 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@63998bf4
2025-07-07 08:56:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:56:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 5 JPA repository interfaces.
2025-07-07 08:56:56 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:56:56 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 08:56:56 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:56:56 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:56:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 08:56:56 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-07-07 08:56:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 08:56:56 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:56:57 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:56:57 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:56:58 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:56:58 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 08:56:58 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 08:56:58 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 08:56:59 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 08:56:59 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:56:59 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 08:56:59 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 08:57:00 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:57:00 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:57:00 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-07 08:57:00 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 08:57:00 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-07 08:57:00 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-07 08:57:00 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-07-07 08:57:00 [main] INFO  o.u.s.i.SecurityPublicEndpointTest - Started SecurityPublicEndpointTest in 6.382 seconds (process running for 7.217)
2025-07-07 08:57:01 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:57:01 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=publictestuser, email=publictest@example.com, password=password123, firstNa (truncated)...]
2025-07-07 08:57:01 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:57:01 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:57:01 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:57:01 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:57:01 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:57:01 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=1, role=USER)]
2025-07-07 08:57:01 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:57:01 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=specifictestuser, email=specifictest@example.com, password=password123, fir (truncated)...]
2025-07-07 08:57:01 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:57:01 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:57:01 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:57:01 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:57:01 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:57:01 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=2, role=USER)]
2025-07-07 08:57:01 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@63998bf4, started on Mon Jul 07 08:56:54 UTC 2025
2025-07-07 08:57:01 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:57:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:57:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:57:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:57:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:57:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:57:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:57:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:57:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:57:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 08:57:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 08:57:41 [main] INFO  o.u.s.i.SecurityPublicEndpointTest - Starting SecurityPublicEndpointTest using Java 17.0.15 with PID 5406 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:57:41 [main] INFO  o.u.s.i.SecurityPublicEndpointTest - The following 1 profile is active: "test"
2025-07-07 08:57:41 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4cfbaf4
2025-07-07 08:57:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:57:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 5 JPA repository interfaces.
2025-07-07 08:57:43 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:57:43 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 08:57:43 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:57:44 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:57:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 08:57:44 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-07-07 08:57:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 08:57:44 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:57:45 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:57:45 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:57:45 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:57:45 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 08:57:46 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 08:57:46 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 08:57:46 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 08:57:46 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:57:46 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 08:57:47 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 08:57:47 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:57:47 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:57:47 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-07 08:57:47 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 08:57:47 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-07 08:57:47 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-07 08:57:47 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-07-07 08:57:47 [main] INFO  o.u.s.i.SecurityPublicEndpointTest - Started SecurityPublicEndpointTest in 6.342 seconds (process running for 7.207)
2025-07-07 08:57:48 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:57:48 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=publictestuser, email=publictest@example.com, password=password123, firstNa (truncated)...]
2025-07-07 08:57:48 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:57:48 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:57:48 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:57:48 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:57:48 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:57:48 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=1, role=USER)]
2025-07-07 08:57:48 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:57:48 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=specifictestuser, email=specifictest@example.com, password=password123, fir (truncated)...]
2025-07-07 08:57:48 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:57:48 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:57:48 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:57:48 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:57:48 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:57:48 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=2, role=USER)]
2025-07-07 08:57:48 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [org.utku.shoppingapi.integration.AuthIntegrationTest]: AuthIntegrationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-07 08:57:48 [main] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration org.utku.shoppingapi.ShoppingApiApplication for test class org.utku.shoppingapi.integration.AuthIntegrationTest
2025-07-07 08:57:48 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:57:48 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=null, las (truncated)...]
2025-07-07 08:57:48 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:57:48 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:57:48 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:57:49 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=3, role=USER)]
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=testuser, password=password123)]
2025-07-07 08:57:49 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ0ZXN0dXNlciIsImlkIjozLCJyb2xlcyI6WyJST0xFX1VTRVIiX (truncated)...]
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#getAllProducts(Pageable)
2025-07-07 08:57:49 [main] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.active,
        p1_0.category,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-07 08:57:49 [main] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 0 containing UNKNOWN instances]
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test@example.com, password=password123, firstName=Test, las (truncated)...]
2025-07-07 08:57:49 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:57:49 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:57:49 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:57:49 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=4, role=USER)]
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=nonexistent, password=wrongpassword)]
2025-07-07 08:57:49 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleBadCredentials(BadCredentialsException)
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing ["Invalid username or password"]
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.authentication.BadCredentialsException: Bad credentials]
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test1@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:57:49 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:57:49 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:57:49 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:57:49 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=5, role=USER)]
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=testuser, email=test2@example.com, password=password123, firstName=null, la (truncated)...]
2025-07-07 08:57:49 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.utku.shoppingapi.exception.GlobalExceptionHandler#handleValidationExceptions(MethodArgumentNotValidException)
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{username=This username is already taken}]
2025-07-07 08:57:49 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public org.springframework.http.ResponseEntity<org.utku.shoppingapi.dto.auth.MessageResponse> org.utku.shoppingapi.controller.AuthController.registerUser(org.utku.shoppingapi.dto.auth.RegisterRequest): [Field error in object 'registerRequest' on field 'username': rejected value [testuser]; codes [UniqueUsername.registerRequest.username,UniqueUsername.username,UniqueUsername.java.lang.String,UniqueUsername]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [registerRequest.username,username]; arguments []; default message [username]]; default message [This username is already taken]] ]
2025-07-07 08:57:49 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@4cfbaf4, started on Mon Jul 07 08:57:41 UTC 2025
2025-07-07 08:57:49 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:57:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:57:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:57:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:57:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:57:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:57:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:57:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:57:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:57:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 08:57:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 08:58:08 [main] INFO  o.u.s.i.SecurityPublicEndpointTest - Starting SecurityPublicEndpointTest using Java 17.0.15 with PID 5661 (started by runner in /home/runner/work/ShoppingAPI/ShoppingAPI)
2025-07-07 08:58:08 [main] INFO  o.u.s.i.SecurityPublicEndpointTest - The following 1 profile is active: "test"
2025-07-07 08:58:08 [main] DEBUG o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@63998bf4
2025-07-07 08:58:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 08:58:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 5 JPA repository interfaces.
2025-07-07 08:58:09 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 08:58:09 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 08:58:10 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 08:58:10 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 08:58:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 08:58:10 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-07-07 08:58:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 08:58:10 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 08:58:11 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    create table cart_items (
        quantity integer not null check (quantity>=1),
        unit_price numeric(10,2) not null,
        cart_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        updated_at timestamp(6),
        primary key (id),
        unique (cart_id, product_id)
    )
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    create table carts (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint unique,
        session_id varchar(100),
        primary key (id)
    )
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    create table favorites (
        created_at timestamp(6),
        id bigint generated by default as identity,
        product_id bigint not null,
        user_id bigint not null,
        primary key (id),
        unique (user_id, product_id)
    )
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    create table order_items (
        quantity integer not null,
        unit_price numeric(10,2) not null,
        id bigint generated by default as identity,
        order_id bigint not null,
        product_id bigint not null,
        primary key (id)
    )
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    create table orders (
        total_amount numeric(10,2) not null,
        id bigint generated by default as identity,
        ordered_at timestamp(6),
        user_id bigint not null,
        primary key (id)
    )
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    create table products (
        active boolean not null,
        price numeric(10,2) not null,
        stock_quantity integer not null check (stock_quantity>=0),
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        category varchar(100),
        description TEXT,
        name varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role enum ('ADMIN','USER')
    )
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    create table users (
        enabled boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        phone_number varchar(15),
        username varchar(50) not null unique,
        email varchar(100) not null unique,
        first_name varchar(100),
        last_name varchar(100),
        password varchar(255) not null,
        primary key (id)
    )
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FKpcttvuq4mxppo8sxggjtn5i2c 
       foreign key (cart_id) 
       references carts
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists cart_items 
       add constraint FK1re40cjegsfvw58xrkdp6bac6 
       foreign key (product_id) 
       references products
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists carts 
       add constraint FKb5o626f86h46m4s7ms6ginnop 
       foreign key (user_id) 
       references users
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FK6sgu5npe8ug4o42bf9j71x20c 
       foreign key (product_id) 
       references products
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists favorites 
       add constraint FKk7du8b8ewipawnnpg76d55fus 
       foreign key (user_id) 
       references users
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKbioxgbv59vetrxe0ejfubep1w 
       foreign key (order_id) 
       references orders
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists order_items 
       add constraint FKocimc7dtr037rh4ls4l95nlfi 
       foreign key (product_id) 
       references products
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users
2025-07-07 08:58:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users
2025-07-07 08:58:11 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:58:11 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 08:58:12 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 08:58:12 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 08:58:12 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 08:58:13 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 08:58:13 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 08:58:13 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 08:58:13 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 08:58:13 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 08:58:14 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-07-07 08:58:14 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 08:58:14 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
2025-07-07 08:58:14 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-07-07 08:58:14 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-07-07 08:58:14 [main] INFO  o.u.s.i.SecurityPublicEndpointTest - Started SecurityPublicEndpointTest in 6.399 seconds (process running for 7.272)
2025-07-07 08:58:14 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:58:14 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=publictestuser, email=publictest@example.com, password=password123, firstNa (truncated)...]
2025-07-07 08:58:14 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:58:14 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:58:14 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:58:15 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:58:15 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:58:15 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=1, role=USER)]
2025-07-07 08:58:15 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 08:58:15 [main] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=specifictestuser, email=specifictest@example.com, password=password123, fir (truncated)...]
2025-07-07 08:58:15 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:58:15 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 08:58:15 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 08:58:15 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-07-07 08:58:15 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 08:58:15 [main] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=2, role=USER)]
2025-07-07 08:58:15 [SpringApplicationShutdownHook] DEBUG o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@63998bf4, started on Mon Jul 07 08:58:08 UTC 2025
2025-07-07 08:58:15 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 08:58:15 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists cart_items cascade 
2025-07-07 08:58:15 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists carts cascade 
2025-07-07 08:58:15 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists favorites cascade 
2025-07-07 08:58:15 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists order_items cascade 
2025-07-07 08:58:15 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists orders cascade 
2025-07-07 08:58:15 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists products cascade 
2025-07-07 08:58:15 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists user_roles cascade 
2025-07-07 08:58:15 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-07-07 08:58:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 08:58:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 12:10:01 [main] INFO  o.u.s.ShoppingApiApplication - Starting ShoppingApiApplication using Java 17.0.15 with PID 9452 (C:\Users\kurgu\Desktop\ShoppingAPI\target\classes started by kurgu in C:\Users\kurgu\Desktop\ShoppingAPI)
2025-07-07 12:10:01 [main] INFO  o.u.s.ShoppingApiApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-07 12:10:01 [main] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\Users\kurgu\Desktop\ShoppingAPI\compose.yaml'
2025-07-07 12:10:02 [main] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - There are already Docker Compose services running, skipping startup
2025-07-07 12:10:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 12:10:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 5 JPA repository interfaces.
2025-07-07 12:10:04 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-07 12:10:04 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-07 12:10:04 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.31]
2025-07-07 12:10:04 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-07 12:10:04 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1339 ms
2025-07-07 12:10:04 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 12:10:04 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 12:10:04 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 12:10:04 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 12:10:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 12:10:04 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6c737fdb
2025-07-07 12:10:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 12:10:04 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 12:10:05 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 12:10:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       alter column description set data type TEXT
2025-07-07 12:10:05 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 12:10:06 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 12:10:06 [main] ERROR o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'securityConfig' defined in file [C:\Users\kurgu\Desktop\ShoppingAPI\target\classes\org\utku\shoppingapi\security\SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'jwtUtil': Injection of autowired dependencies failed
2025-07-07 12:10:06 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-07-07 12:10:06 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1679)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.15/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.15/java.lang.Thread.run(Thread.java:840)
2025-07-07 12:10:06 [main] WARN  o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [HikariPool-1 connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.15/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.15/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.15/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1679)
 java.base@17.0.15/java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:460)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.15/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.15/java.lang.Thread.run(Thread.java:840)
2025-07-07 12:10:06 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2025-07-07 12:10:06 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 12:10:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 12:10:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 12:10:06 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-07 12:10:06 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:165)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at org.utku.shoppingapi.ShoppingApiApplication.main(ShoppingApiApplication.java:35)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:147)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:516)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'securityConfig' defined in file [C:\Users\kurgu\Desktop\ShoppingAPI\target\classes\org\utku\shoppingapi\security\SecurityConfig.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'jwtUtil': Injection of autowired dependencies failed
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:415)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jwtUtil': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:515)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 63 common frames omitted
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'JWT_SECRET' in value "${JWT_SECRET}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:230)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:80)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:61)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:153)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:149)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:153)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:964)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1374)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:785)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:509)
	... 75 common frames omitted
2025-07-07 12:12:31 [main] INFO  o.u.s.ShoppingApiApplication - Starting ShoppingApiApplication using Java 17.0.15 with PID 20380 (C:\Users\kurgu\Desktop\ShoppingAPI\target\classes started by kurgu in C:\Users\kurgu\Desktop\ShoppingAPI)
2025-07-07 12:12:31 [main] INFO  o.u.s.ShoppingApiApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-07 12:12:31 [main] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\Users\kurgu\Desktop\ShoppingAPI\compose.yaml'
2025-07-07 12:12:32 [main] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - There are already Docker Compose services running, skipping startup
2025-07-07 12:12:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 12:12:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 5 JPA repository interfaces.
2025-07-07 12:12:33 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-07 12:12:33 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-07 12:12:33 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.31]
2025-07-07 12:12:33 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-07 12:12:33 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1361 ms
2025-07-07 12:12:33 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 12:12:34 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 12:12:34 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 12:12:34 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 12:12:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 12:12:34 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3703a400
2025-07-07 12:12:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 12:12:34 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 12:12:35 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 12:12:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       alter column description set data type TEXT
2025-07-07 12:12:35 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 12:12:35 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 12:12:35 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 12:12:35 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 12:12:35 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 12:12:36 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 12:12:36 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 12:12:36 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 12:12:36 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 12:12:36 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 12:12:36 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 12:12:36 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-07 12:12:36 [main] INFO  o.u.s.ShoppingApiApplication - Started ShoppingApiApplication in 6.161 seconds (process running for 6.696)
2025-07-07 12:12:37 [RMI TCP Connection(3)-192.168.56.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-07 12:12:37 [RMI TCP Connection(3)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-07 12:12:37 [RMI TCP Connection(3)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-07 12:12:37 [RMI TCP Connection(3)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-07 12:12:37 [RMI TCP Connection(3)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-07 12:12:37 [RMI TCP Connection(3)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@788890e9
2025-07-07 12:12:37 [RMI TCP Connection(3)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@37844399
2025-07-07 12:12:37 [RMI TCP Connection(3)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-07 12:12:37 [RMI TCP Connection(3)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-07-07 12:12:41 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.html", parameters={}
2025-07-07 12:12:41 [http-nio-8080-exec-3] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 12:12:41 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-07-07 12:12:41 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-initializer.js", parameters={}
2025-07-07 12:12:41 [http-nio-8080-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 12:12:41 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 12:12:41 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/v3/api-docs/swagger-config", parameters={}
2025-07-07 12:12:41 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
2025-07-07 12:12:41 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json]
2025-07-07 12:12:41 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{configUrl=/v3/api-docs/swagger-config, displayRequestDuration=true, filter=true, oauth2RedirectUrl= (truncated)...]
2025-07-07 12:12:41 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 12:12:41 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/v3/api-docs", parameters={}
2025-07-07 12:12:41 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-07-07 12:12:41 [http-nio-8080-exec-1] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 306 ms
2025-07-07 12:12:41 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, */*] and supported [application/json]
2025-07-07 12:12:41 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-07-07 12:12:41 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 12:13:08 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/products", parameters={}
2025-07-07 12:13:08 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#getAllProducts(Pageable)
2025-07-07 12:13:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.active,
        p1_0.category,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-07 12:13:08 [http-nio-8080-exec-7] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-07 12:13:08 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 12:13:08 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 0 containing UNKNOWN instances]
2025-07-07 12:13:08 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 12:13:15 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 12:13:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 12:13:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-07-07 12:14:35 [main] INFO  o.u.s.ShoppingApiApplication - Starting ShoppingApiApplication using Java 17.0.15 with PID 8496 (C:\Users\kurgu\Desktop\ShoppingAPI\target\classes started by kurgu in C:\Users\kurgu\Desktop\ShoppingAPI)
2025-07-07 12:14:35 [main] INFO  o.u.s.ShoppingApiApplication - No active profile set, falling back to 1 default profile: "default"
2025-07-07 12:14:35 [main] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - Using Docker Compose file 'C:\Users\kurgu\Desktop\ShoppingAPI\compose.yaml'
2025-07-07 12:14:36 [main] INFO  o.s.b.d.c.l.DockerComposeLifecycleManager - There are already Docker Compose services running, skipping startup
2025-07-07 12:14:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-07 12:14:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 5 JPA repository interfaces.
2025-07-07 12:14:37 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-07-07 12:14:37 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-07-07 12:14:37 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.31]
2025-07-07 12:14:37 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-07-07 12:14:37 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1383 ms
2025-07-07 12:14:37 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-07 12:14:37 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-07-07 12:14:37 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-07-07 12:14:38 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-07 12:14:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-07-07 12:14:38 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7d0df326
2025-07-07 12:14:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-07-07 12:14:38 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-07-07 12:14:39 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-07-07 12:14:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists products 
       alter column description set data type TEXT
2025-07-07 12:14:39 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 12:14:39 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-07-07 12:14:39 [main] DEBUG o.s.w.f.ServerHttpObservationFilter - Filter 'webMvcObservationFilter' configured for use
2025-07-07 12:14:39 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-07-07 12:14:39 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2025-07-07 12:14:40 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-07-07 12:14:40 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 37 mappings in 'requestMappingHandlerMapping'
2025-07-07 12:14:40 [main] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-07-07 12:14:40 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoints beneath base path '/actuator'
2025-07-07 12:14:40 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-07-07 12:14:40 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-07-07 12:14:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-07-07 12:14:40 [main] INFO  o.u.s.ShoppingApiApplication - Started ShoppingApiApplication in 6.273 seconds (process running for 6.781)
2025-07-07 12:14:41 [RMI TCP Connection(3)-192.168.56.1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-07-07 12:14:41 [RMI TCP Connection(3)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-07-07 12:14:41 [RMI TCP Connection(3)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-07-07 12:14:41 [RMI TCP Connection(3)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-07-07 12:14:41 [RMI TCP Connection(3)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-07-07 12:14:41 [RMI TCP Connection(3)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4ea78b91
2025-07-07 12:14:41 [RMI TCP Connection(3)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2428eadb
2025-07-07 12:14:41 [RMI TCP Connection(3)-192.168.56.1] DEBUG o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-07-07 12:14:41 [RMI TCP Connection(3)-192.168.56.1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2025-07-07 12:14:47 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.html", parameters={}
2025-07-07 12:14:47 [http-nio-8080-exec-1] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 12:14:47 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-07-07 12:14:47 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-initializer.js", parameters={}
2025-07-07 12:14:47 [http-nio-8080-exec-6] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 12:14:47 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 12:14:47 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/v3/api-docs/swagger-config", parameters={}
2025-07-07 12:14:47 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
2025-07-07 12:14:47 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json]
2025-07-07 12:14:47 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{configUrl=/v3/api-docs/swagger-config, displayRequestDuration=true, filter=true, oauth2RedirectUrl= (truncated)...]
2025-07-07 12:14:47 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 12:14:47 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - GET "/v3/api-docs", parameters={}
2025-07-07 12:14:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-07-07 12:14:47 [http-nio-8080-exec-2] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 330 ms
2025-07-07 12:14:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, */*] and supported [application/json]
2025-07-07 12:14:47 [http-nio-8080-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-07-07 12:14:47 [http-nio-8080-exec-2] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 12:14:52 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/register", parameters={}
2025-07-07 12:14:52 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#registerUser(RegisterRequest)
2025-07-07 12:14:52 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [RegisterRequest(username=utkualcan, email=utkualcan@gmail.com, password=utkualcan76, firstName=Utku, (truncated)...]
2025-07-07 12:14:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 12:14:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
2025-07-07 12:14:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
2025-07-07 12:14:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (created_at, email, enabled, first_name, last_name, password, phone_number, updated_at, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-07-07 12:14:53 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_roles
        (user_id, role) 
    values
        (?, ?)
2025-07-07 12:14:53 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 12:14:53 [http-nio-8080-exec-5] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [MessageResponse(message=User registered successfully!, userId=1, role=USER)]
2025-07-07 12:14:53 [http-nio-8080-exec-5] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 12:15:09 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - POST "/api/auth/login", parameters={}
2025-07-07 12:15:09 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.AuthController#authenticateUser(LoginRequest)
2025-07-07 12:15:09 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [LoginRequest(username=utkualcan, password=utkualcan76)]
2025-07-07 12:15:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone_number,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-07-07 12:15:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.session_id,
        c1_0.updated_at,
        c1_0.user_id 
    from
        carts c1_0 
    where
        c1_0.user_id=?
2025-07-07 12:15:09 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_0.role 
    from
        user_roles r1_0 
    where
        r1_0.user_id=?
2025-07-07 12:15:09 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 12:15:09 [http-nio-8080-exec-7] DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [JwtResponse(token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1dGt1YWxjYW4iLCJpZCI6MSwicm9sZXMiOlsiUk9MRV9VU0VSI (truncated)...]
2025-07-07 12:15:09 [http-nio-8080-exec-7] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 12:16:07 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/index.html", parameters={}
2025-07-07 12:16:07 [http-nio-8080-exec-9] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 12:16:07 [http-nio-8080-exec-9] DEBUG o.s.web.servlet.DispatcherServlet - Completed 304 NOT_MODIFIED
2025-07-07 12:16:07 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - GET "/swagger-ui/swagger-initializer.js", parameters={}
2025-07-07 12:16:07 [http-nio-8080-exec-10] DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]]
2025-07-07 12:16:07 [http-nio-8080-exec-10] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 12:16:07 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - GET "/v3/api-docs/swagger-config", parameters={}
2025-07-07 12:16:07 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.ui.SwaggerConfigResource#openapiJson(HttpServletRequest)
2025-07-07 12:16:07 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json]
2025-07-07 12:16:07 [http-nio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{configUrl=/v3/api-docs/swagger-config, displayRequestDuration=true, filter=true, oauth2RedirectUrl= (truncated)...]
2025-07-07 12:16:07 [http-nio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 12:16:07 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - GET "/v3/api-docs", parameters={}
2025-07-07 12:16:07 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springdoc.webmvc.api.OpenApiWebMvcResource#openapiJson(HttpServletRequest, String, Locale)
2025-07-07 12:16:07 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, */*] and supported [application/json]
2025-07-07 12:16:07 [http-nio-8080-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [{123, 34, 111, 112, 101, 110, 97, 112, 105, 34, 58, 34, 51, 46, 48, 46, 49, 34, 44, 34, 105, 110, 10 (truncated)...]
2025-07-07 12:16:07 [http-nio-8080-exec-6] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 12:16:09 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/products", parameters={}
2025-07-07 12:16:09 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#getAllProducts(Pageable)
2025-07-07 12:16:09 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.active,
        p1_0.category,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-07 12:16:09 [http-nio-8080-exec-3] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-07-07 12:16:09 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 12:16:09 [http-nio-8080-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 0 containing UNKNOWN instances]
2025-07-07 12:16:09 [http-nio-8080-exec-3] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 12:17:28 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - GET "/api/products", parameters={}
2025-07-07 12:17:28 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.utku.shoppingapi.controller.ProductController#getAllProducts(Pageable)
2025-07-07 12:17:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.id,
        p1_0.active,
        p1_0.category,
        p1_0.created_at,
        p1_0.description,
        p1_0.name,
        p1_0.price,
        p1_0.stock_quantity,
        p1_0.updated_at 
    from
        products p1_0 
    order by
        p1_0.id 
    offset
        ? rows 
    fetch
        first ? rows only
2025-07-07 12:17:28 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2025-07-07 12:17:28 [http-nio-8080-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 0 containing UNKNOWN instances]
2025-07-07 12:17:28 [http-nio-8080-exec-8] DEBUG o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-07-07 12:18:03 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-07-07 12:18:03 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-07-07 12:18:03 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
